Comment:
    /\/\*(.|\n)*?\*\// | /\/\/.*?$/
;

Scene:
    shapes*=Shape
    draw_instructions*=DrawInstruction
;

Shape:
    'shape' name=ID
        line_color=LineColor?
        fill_collor=FillColor?
        lines+=Line
    'end'
;

Line:
    'line' direction=Direction length=INT
;

Direction:
    bearing=Bearing | angle=Angle
;

Bearing:
    /* Notice that the bearing definitions are ordered in a strange way. We’ve chosen an order among many possibilities, but with the property that a string precedes its substrings. For example, 'NE' comes before 'N'. This is necessary because the parser chooses the first match and doesn’t backtrack, so if we had put 'N' before 'NE', the 'NE' option would never be reached and the parser would fail to recognize the string, 'NE'. In fact, Arpeggio, the parser used by textX, is a PEG parser – this means that the choice operator is deterministic and ordered. */
    'E' | 'NE' | 'NW' | 'N' | 'SE' | 'SW' | 'S' | 'W'
;

Angle:
    degrees=FLOAT ('°' | 'deg')
;

LineColor: 
    'lines' color=Color
;

FillColor:
    'fill' color=Color
;

Color:
    'red' | 'green' | 'blue' | 'yellow' | 'magenta' | 'cyan' | 'black' | 'white' | /#[0-9a-f]{6}/
;

DrawInstruction:
    'draw' shape=[Shape] position=Position?
;

Position:
    'at' x=INT ',' y=INT
;
